// to run in geth: loadScript("launch.js")

personal.unlockAccount(eth.accounts[0], "password", 50000000);
console.log("Unlocked account")

miner.start()
console.log("Started mining")

var ringct_sol_ringctContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"keyImage","type":"bytes32"},{"name":"pubKeys","type":"bytes"},{"name":"m","type":"string"},{"name":"keyMatrix","type":"bytes32"},{"name":"rangeProofs","type":"bytes32"}],"name":"verify","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"rangeProofs","type":"bytes32"}],"name":"verifyRangeProofs","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pubKeys","type":"bytes"},{"name":"m","type":"string"},{"name":"keyMatrix","type":"bytes32"}],"name":"verifyRing","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"tester","type":"string"}],"name":"test","outputs":[],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"string"}],"name":"PrintString","type":"event"}]);

console.log("set contract")
var ringct_sol_ringct = ringct_sol_ringctContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x60606040527f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817986000557f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b86001557ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600255600560035560066004556007600555341561008757fe5b5b610664806100976000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806368514e9d1461005c5780638d435d1a14610138578063ca2f4e2214610174578063f9fbd55414610236575bfe5b341561006457fe5b61011e60048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080356000191690602001909190803560001916906020019091905050610290565b604051808215151515815260200191505060405180910390f35b341561014057fe5b61015a600480803560001916906020019091905050610358565b604051808215151515815260200191505060405180910390f35b341561017c57fe5b61021c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803560001916906020019091905050610360565b604051808215151515815260200191505060405180910390f35b341561023e57fe5b61028e600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506103a5565b005b60006000600090505b6006805490508110156102eb5786600019166006828154811015156102ba57fe5b906000526020600020900160005b50546000191614156102dd576000915061034e565b5b8080600101915050610299565b6102f483610358565b1515610303576000915061034e565b61030e868686610360565b151561031d576000915061034e565b6006805480600101828161033191906105e7565b916000526020600020900160005b89909190915090600019169055505b5095945050505050565b60005b919050565b600060006000602060ff169150818651141515610380576000925061039c565b600190505b8181101561039b575b8080600101915050610385565b5b50509392505050565b3373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260138152602001807f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0000000000000000000000000081525060200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260118152602001807f576520676f742061206d6573736167653a00000000000000000000000000000081525060200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad2626095682604051808060200182810382528381815181526020019150805190602001908083836000831461052b575b80518252602083111561052b57602082019150602081019050602083039250610507565b505050905090810190601f1680156105575780820380516001836020036101000a031916815260200191505b509250505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260138152602001807f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0000000000000000000000000081525060200191505060405180910390a25b50565b81548183558181151161060e5781836000526020600020918201910161060d9190610613565b5b505050565b61063591905b80821115610631576000816000905550600101610619565b5090565b905600a165627a7a7230582083532aafc98e7d64b719ec58589f36be3795cf37955a24a82639d18aff74b00a0029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);

		var exampleEvent = ringct_sol_ringct.PrintString({_from: web3.eth.coinbase});
		console.log("Listening on event")

		exampleEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log(result.args._value)
		})
		ringct_sol_ringct.test.sendTransaction('yihha', {from: web3.eth.coinbase})


    }
 })


setTimeout(function(){
	miner.stop()
	console.log("Stoped mining")
}, 10000);

