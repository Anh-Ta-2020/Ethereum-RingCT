// to run in geth: Secp256k1Curve


remixInterface = [{"constant":false,"inputs":[{"name":"x","type":"uint256"},{"name":"y","type":"uint256"},{"name":"t","type":"bytes32[2][]"}],"name":"testb","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"tester","type":"string"}],"name":"test","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_value","type":"string"}],"name":"LogErrorString","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"string"}],"name":"PrintString","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"bool"}],"name":"PrintBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"address"}],"name":"PrintAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"PrintUint","type":"event"}]

remixData = "60606040527f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817986000557f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b860015560406040519081016040528060005481526020016001548152506002906002610076929190610120565b5060206040519081016040528060026002806020026040519081016040528092919082600280156100bc576020028201915b8154815260200190600101908083116100a8575b505050505081525060046000820151816000019060026100dd929190610160565b5050507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600655600560075560066008556007600955341561011b57fe5b6101c5565b826002810192821561014f579160200282015b8281111561014e578251825591602001919060010190610133565b5b50905061015c91906101a0565b5090565b826002810192821561018f579160200282015b8281111561018e578251825591602001919060010190610173565b5b50905061019c91906101a0565b5090565b6101c291905b808211156101be5760008160009055506001016101a6565b5090565b90565b610bc180620001d56000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806382b313f814610046578063f9fbd55414610107575bfe5b341561004e57fe5b6100e960048080359060200190919080359060200190919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156100db578484839050604002016002806020026040519081016040528092919082600260200280828437820191505050505081526020019060010190610096565b5050505050919050506101e8565b60405180826000191660001916815260200191505060405180910390f35b341561010f57fe5b61015f600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061041d565b60405180806020018281038252838181518152602001915080519060200190808383600083146101ae575b8051825260208311156101ae5760208201915060208101905060208303925061018a565b505050905090810190601f1680156101da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000600060006000600060003373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260168152602001807f576520676f742061206e696365206d6573736167653a0000000000000000000081525060200191505060405180910390a2600092505b8883101561037357600091505b878210156103655786828985020181518110151561029f57fe5b9060200190602002015184838a8602018154811015156102bb57fe5b906000526020600020906002020160005b509060026102db929190610a47565b5061030087838a8602018151811015156102f157fe5b906020019060200201516107f4565b858481548110151561030e57fe5b906000526020600020900160005b508381548110151561032a57fe5b906000526020600020906002020160005b50600082015181600001906002610353929190610a8d565b509050505b8180600101925050610285565b5b8280600101935050610278565b84600081548110151561038257fe5b906000526020600020900160005b50600081548110151561039f57fe5b906000526020600020906002020160005b5060000190508460008154811015156103c557fe5b906000526020600020900160005b5060008154811015156103e257fe5b906000526020600020906002020160005b50600001600060028110151561040557fe5b0160005b505460010295505b50505050509392505050565b610425610acd565b6000600060006000610435610ae1565b61043d610b09565b600060007f551303dd5f39cbfe6daba6b3e27754b8a7d72f519756a2cde2b92c2bbde159a76040518080602001828103825260138152602001807f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0000000000000000000000000081525060200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260168152602001807f576520676f742061206e696365206d6573736167653a0000000000000000000081525060200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609568b60405180806020018281038252838181518152602001915080519060200190808383600083146105b0575b8051825260208311156105b05760208201915060208101905060208303925061058c565b505050905090810190601f1680156105dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390a27f70f78e12ca19e7ad5149e9e7aac89d472eba3eafda6dbd485d3c142e915b8cd797507ff24769e16ee2286f4bbe6f7f7d881a012cce9a00a914c8ec5d3fb8f645a027e696507f70f78e12ca19e7ad5149e9e7aac89d472eba3eafda6dbd485d3c142e915b8cd760010295507ff24769e16ee2286f4bbe6f7f7d881a012cce9a00a914c8ec5d3fb8f645a027e760010294506040604051908101604052808981526020018881525093506020604051908101604052808581525092506106b2836000015161086f565b91503373ffffffffffffffffffffffffffffffffffffffff167fa9fb0a1f0be3734901e8fbc28f614366dbf6b7c2d2a0b8175f6f6a91b1642b9183604051808215151515815260200191505060405180910390a26107108888610997565b90503373ffffffffffffffffffffffffffffffffffffffff167f1e8d6c75e643463d7c4cfa12fe6d1e69344ff1aa8bb66bbae281233cad12c50287600190046040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260138152602001807f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0000000000000000000000000081525060200191505060405180910390a28998505b5050505050505050919050565b6107fc610b09565b60006000610808610ae1565b84600060028110151561081757fe5b602002015160019004925084600160028110151561083157fe5b60200201516001900491506040604051908101604052808481526020018381525090506020604051908101604052808281525093505b505050919050565b60006000600060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f92508460006002811015156108a957fe5b6020020151600014806108ce5750828560006002811015156108c757fe5b6020020151145b806108ec57508460016002811015156108e357fe5b60200201516000145b8061090957508285600160028110151561090257fe5b6020020151145b15610917576000935061098f565b8285600160028110151561092757fe5b602002015186600160028110151561093b57fe5b60200201510991508260078487600060028110151561095657fe5b60200201518689600060028110151561096b57fe5b60200201518a600060028110151561097f57fe5b6020020151090908905080821493505b505050919050565b60006000600060006000600060008814806109b157508688145b806109bc5750600087145b156109c75760006000fd5b868811156109de5786888115156109da57fe5b0697505b600193508692508791505b600082141515610a225781838115156109fe57fe5b049050838482028603838484028603809550819650829750839850505050506109e9565b6000851215610a38578460000387039550610a3c565b8495505b505050505092915050565b8260028101928215610a7c579160200282015b82811115610a7b578251829060001916905591602001919060010190610a5a565b5b509050610a899190610b23565b5090565b8260028101928215610abc579160200282015b82811115610abb578251825591602001919060010190610aa0565b5b509050610ac99190610b48565b5090565b602060405190810160405280600081525090565b6040604051908101604052806002905b6000815260200190600190039081610af15790505090565b604060405190810160405280610b1d610b6d565b81525090565b610b4591905b80821115610b41576000816000905550600101610b29565b5090565b90565b610b6a91905b80821115610b66576000816000905550600101610b4e565b5090565b90565b6040604051908101604052806002905b6000815260200190600190039081610b7d57905050905600a165627a7a72305820ec19dc64756c9ebe26f772a46a48bbe8f85a780ceb2fa2ff7becaae8469b5dab0029"





personal.unlockAccount(eth.accounts[0], "password", 50000000);
console.log("Unlocked account")

miner.start(1)
console.log("Started mining")

var ringct_sol_ringctContract = web3.eth.contract(remixInterface);

console.log("set contract")
var ringct_sol_ringct = ringct_sol_ringctContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x' + remixData, 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);

		var logErrorStringEvent = ringct_sol_ringct.LogErrorString({_from: web3.eth.coinbase});
		var printStringEvent = ringct_sol_ringct.PrintString({_from: web3.eth.coinbase});
		var printBoolEvent = ringct_sol_ringct.PrintBool({_from: web3.eth.coinbase});
		var printAddressEvent = ringct_sol_ringct.PrintAddress({_from: web3.eth.coinbase});
		var printUintEvent = ringct_sol_ringct.PrintUint({_from: web3.eth.coinbase});
		console.log("Listening on event")

		logErrorStringEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log(result.args._value)
		})

		printStringEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log(result.args._value)
		})
		printBoolEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log("boolean incoming: " + result.args._value)
		})
		printAddressEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log("address incoming: " +result.args._value)
		})
		printUintEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log("uint incoming: " + result.args._value)
		})

		console.log("sending transaction")
		//ringct_sol_ringct.test.sendTransaction('sendTransaction message', {from: web3.eth.coinbase})


    }
    setTimeout(function(){
		miner.stop()
		console.log("Stoped mining")
	}, 1500000);
 })

