// to run in geth: Secp256k1Curve


remixInterface = [{"constant":false,"inputs":[{"name":"keyImage","type":"bytes32"},{"name":"pubKeys","type":"bytes"},{"name":"m","type":"string"},{"name":"keyMatrix","type":"bytes32"},{"name":"rangeProofs","type":"bytes32"}],"name":"verify","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"rangeProofs","type":"bytes32"}],"name":"verifyRangeProofs","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pubKeys","type":"bytes"},{"name":"m","type":"string"},{"name":"keyMatrix","type":"bytes32"}],"name":"verifyRing","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"tester","type":"string"}],"name":"test","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"string"}],"name":"PrintString","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"bool"}],"name":"PrintBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"address"}],"name":"PrintAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"PrintUint","type":"event"}]

remixData = "60606040527f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817986000557f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b86001557ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600255600560035560066004556007600555341561008757fe5b5b61096c806100976000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806368514e9d1461005c5780638d435d1a14610138578063ca2f4e2214610174578063f9fbd55414610236575bfe5b341561006457fe5b61011e60048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803560001916906020019091908035600019169060200190919050506102a8565b604051808215151515815260200191505060405180910390f35b341561014057fe5b61015a600480803560001916906020019091905050610370565b604051808215151515815260200191505060405180910390f35b341561017c57fe5b61021c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803560001916906020019091905050610378565b604051808215151515815260200191505060405180910390f35b341561023e57fe5b61028e600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506103bd565b604051808215151515815260200191505060405180910390f35b60006000600090505b6006805490508110156103035786600019166006828154811015156102d257fe5b906000526020600020900160005b50546000191614156102f55760009150610366565b5b80806001019150506102b1565b61030c83610370565b151561031b5760009150610366565b610326868686610378565b15156103355760009150610366565b6006805480600101828161034991906108c7565b916000526020600020900160005b89909190915090600019169055505b5095945050505050565b60005b919050565b600060006000602060ff16915081865114151561039857600092506103b4565b600190505b818110156103b3575b808060010191505061039d565b5b50509392505050565b6000600060006103cb6108f3565b600060003373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260138152602001807f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0000000000000000000000000081525060200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260168152602001807f576520676f742061206e696365206d6573736167653a0000000000000000000081525060200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad26260956886040518080602001828103825283818151815260200191508051906020019080838360008314610555575b80518252602083111561055557602082019150602081019050602083039250610531565b505050905090810190601f1680156105815780820380516001836020036101000a031916815260200191505b509250505060405180910390a260019450600293506040604051908101604052808681526020018581525092506105b7836106ef565b91503373ffffffffffffffffffffffffffffffffffffffff167fa9fb0a1f0be3734901e8fbc28f614366dbf6b7c2d2a0b8175f6f6a91b1642b9183604051808215151515815260200191505060405180910390a26106158585610817565b90503373ffffffffffffffffffffffffffffffffffffffff167f1e8d6c75e643463d7c4cfa12fe6d1e69344ff1aa8bb66bbae281233cad12c502826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff167ffc680a6fc53e446d25af686ec231c7aa160212df2404385e8e63b4ad262609566040518080602001828103825260138152602001807f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0000000000000000000000000081525060200191505060405180910390a25b5050505050919050565b60006000600060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f925084600060028110151561072957fe5b60200201516000148061074e57508285600060028110151561074757fe5b6020020151145b8061076c575084600160028110151561076357fe5b60200201516000145b8061078957508285600160028110151561078257fe5b6020020151145b15610797576000935061080f565b828560016002811015156107a757fe5b60200201518660016002811015156107bb57fe5b6020020151099150826007848760006002811015156107d657fe5b6020020151868960006002811015156107eb57fe5b60200201518a60006002811015156107ff57fe5b6020020151090908905080821493505b505050919050565b600060006000600060006000600088148061083157508688145b8061083c5750600087145b156108475760006000fd5b8688111561085e57868881151561085a57fe5b0697505b600193508692508791505b6000821415156108a257818381151561087e57fe5b04905083848202860383848402860380955081965082975083985050505050610869565b60008512156108b85784600003870395506108bc565b8495505b505050505092915050565b8154818355818115116108ee578183600052602060002091820191016108ed919061091b565b5b505050565b6040604051908101604052806002905b60008152602001906001900390816109035790505090565b61093d91905b80821115610939576000816000905550600101610921565b5090565b905600a165627a7a7230582074542f43060b70a51d92173aa7caf7e58e68eff82e880c8a01a706f8b1e9cc400029"


personal.unlockAccount(eth.accounts[0], "password", 50000000);
console.log("Unlocked account")

miner.start()
console.log("Started mining")

var ringct_sol_ringctContract = web3.eth.contract(remixInterface);

console.log("set contract")
var ringct_sol_ringct = ringct_sol_ringctContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x' + remixData, 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);

		var printStringEvent = ringct_sol_ringct.PrintString({_from: web3.eth.coinbase});
		var printBoolEvent = ringct_sol_ringct.PrintBool({_from: web3.eth.coinbase});
		var printAddressEvent = ringct_sol_ringct.PrintAddress({_from: web3.eth.coinbase});
		var printUintEvent = ringct_sol_ringct.PrintUint({_from: web3.eth.coinbase});
		console.log("Listening on event")

		printStringEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log(result.args._value)
		})
		printBoolEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log("boolean incoming: " + result.args._value)
		})
		printAddressEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log("address incoming: " +result.args._value)
		})
		printUintEvent.watch(function(err, result) {
		  if (err) {
		    console.log(err)
		    return;
		  }
		  console.log("uint incoming: " + result.args._value)
		})

		console.log("sending transaction")
		ringct_sol_ringct.test.sendTransaction('sendTransaction message', {from: web3.eth.coinbase})


    }
    setTimeout(function(){
		miner.stop()
		console.log("Stoped mining")
	}, 15000);
 })

